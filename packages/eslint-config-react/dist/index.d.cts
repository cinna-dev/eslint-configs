import * as eslint0 from "eslint";
import { Rule } from "eslint";
import react from "eslint-plugin-react";
import reactHooks from "eslint-plugin-react-hooks";

//#region src/index.d.ts
declare const _default: ({
  plugins: {
    "react-refresh": {
      rules: Record<string, any>;
    };
  };
  rules: Record<string, any>;
} | {
  plugins: {
    react: {
      deprecatedRules: Partial<{
        'boolean-prop-naming': eslint0.Rule.RuleModule;
        'button-has-type': eslint0.Rule.RuleModule;
        'checked-requires-onchange-or-readonly': eslint0.Rule.RuleModule;
        'default-props-match-prop-types': eslint0.Rule.RuleModule;
        'destructuring-assignment': eslint0.Rule.RuleModule;
        'display-name': eslint0.Rule.RuleModule;
        'forbid-component-props': eslint0.Rule.RuleModule;
        'forbid-dom-props': eslint0.Rule.RuleModule;
        'forbid-elements': eslint0.Rule.RuleModule;
        'forbid-foreign-prop-types': eslint0.Rule.RuleModule;
        'forbid-prop-types': eslint0.Rule.RuleModule;
        'forward-ref-uses-ref': eslint0.Rule.RuleModule;
        'function-component-definition': eslint0.Rule.RuleModule;
        'hook-use-state': eslint0.Rule.RuleModule;
        'iframe-missing-sandbox': eslint0.Rule.RuleModule;
        'jsx-boolean-value': eslint0.Rule.RuleModule;
        'jsx-child-element-spacing': eslint0.Rule.RuleModule;
        'jsx-closing-bracket-location': eslint0.Rule.RuleModule;
        'jsx-closing-tag-location': eslint0.Rule.RuleModule;
        'jsx-curly-spacing': eslint0.Rule.RuleModule;
        'jsx-curly-newline': eslint0.Rule.RuleModule;
        'jsx-equals-spacing': eslint0.Rule.RuleModule;
        'jsx-filename-extension': eslint0.Rule.RuleModule;
        'jsx-first-prop-new-line': eslint0.Rule.RuleModule;
        'jsx-handler-names': eslint0.Rule.RuleModule;
        'jsx-indent': eslint0.Rule.RuleModule;
        'jsx-indent-props': eslint0.Rule.RuleModule;
        'jsx-key': eslint0.Rule.RuleModule;
        'jsx-max-depth': eslint0.Rule.RuleModule;
        'jsx-max-props-per-line': eslint0.Rule.RuleModule;
        'jsx-newline': eslint0.Rule.RuleModule;
        'jsx-no-bind': eslint0.Rule.RuleModule;
        'jsx-no-comment-textnodes': eslint0.Rule.RuleModule;
        'jsx-no-constructed-context-values': eslint0.Rule.RuleModule;
        'jsx-no-duplicate-props': eslint0.Rule.RuleModule;
        'jsx-no-leaked-render': eslint0.Rule.RuleModule;
        'jsx-no-literals': eslint0.Rule.RuleModule;
        'jsx-no-script-url': eslint0.Rule.RuleModule;
        'jsx-no-target-blank': eslint0.Rule.RuleModule;
        'jsx-no-useless-fragment': eslint0.Rule.RuleModule;
        'jsx-one-expression-per-line': eslint0.Rule.RuleModule;
        'jsx-no-undef': eslint0.Rule.RuleModule;
        'jsx-curly-brace-presence': eslint0.Rule.RuleModule;
        'jsx-pascal-case': eslint0.Rule.RuleModule;
        'jsx-fragments': eslint0.Rule.RuleModule;
        'jsx-props-no-multi-spaces': eslint0.Rule.RuleModule;
        'jsx-props-no-spreading': eslint0.Rule.RuleModule;
        'jsx-props-no-spread-multi': eslint0.Rule.RuleModule;
        'jsx-sort-default-props': eslint0.Rule.RuleModule;
        'jsx-sort-props': eslint0.Rule.RuleModule;
        'jsx-space-before-closing': eslint0.Rule.RuleModule;
        'jsx-tag-spacing': eslint0.Rule.RuleModule;
        'jsx-uses-react': eslint0.Rule.RuleModule;
        'jsx-uses-vars': eslint0.Rule.RuleModule;
        'jsx-wrap-multilines': eslint0.Rule.RuleModule;
        'no-invalid-html-attribute': eslint0.Rule.RuleModule;
        'no-access-state-in-setstate': eslint0.Rule.RuleModule;
        'no-adjacent-inline-elements': eslint0.Rule.RuleModule;
        'no-array-index-key': eslint0.Rule.RuleModule;
        'no-arrow-function-lifecycle': eslint0.Rule.RuleModule;
        'no-children-prop': eslint0.Rule.RuleModule;
        'no-danger': eslint0.Rule.RuleModule;
        'no-danger-with-children': eslint0.Rule.RuleModule;
        'no-deprecated': eslint0.Rule.RuleModule;
        'no-did-mount-set-state': eslint0.Rule.RuleModule;
        'no-did-update-set-state': eslint0.Rule.RuleModule;
        'no-direct-mutation-state': eslint0.Rule.RuleModule;
        'no-find-dom-node': eslint0.Rule.RuleModule;
        'no-is-mounted': eslint0.Rule.RuleModule;
        'no-multi-comp': eslint0.Rule.RuleModule;
        'no-namespace': eslint0.Rule.RuleModule;
        'no-set-state': eslint0.Rule.RuleModule;
        'no-string-refs': eslint0.Rule.RuleModule;
        'no-redundant-should-component-update': eslint0.Rule.RuleModule;
        'no-render-return-value': eslint0.Rule.RuleModule;
        'no-this-in-sfc': eslint0.Rule.RuleModule;
        'no-typos': eslint0.Rule.RuleModule;
        'no-unescaped-entities': eslint0.Rule.RuleModule;
        'no-unknown-property': eslint0.Rule.RuleModule;
        'no-unsafe': eslint0.Rule.RuleModule;
        'no-unstable-nested-components': eslint0.Rule.RuleModule;
        'no-unused-class-component-methods': eslint0.Rule.RuleModule;
        'no-unused-prop-types': eslint0.Rule.RuleModule;
        'no-unused-state': eslint0.Rule.RuleModule;
        'no-object-type-as-default-prop': eslint0.Rule.RuleModule;
        'no-will-update-set-state': eslint0.Rule.RuleModule;
        'prefer-es6-class': eslint0.Rule.RuleModule;
        'prefer-exact-props': eslint0.Rule.RuleModule;
        'prefer-read-only-props': eslint0.Rule.RuleModule;
        'prefer-stateless-function': eslint0.Rule.RuleModule;
        'prop-types': eslint0.Rule.RuleModule;
        'react-in-jsx-scope': eslint0.Rule.RuleModule;
        'require-default-props': eslint0.Rule.RuleModule;
        'require-optimization': eslint0.Rule.RuleModule;
        'require-render-return': eslint0.Rule.RuleModule;
        'self-closing-comp': eslint0.Rule.RuleModule;
        'sort-comp': eslint0.Rule.RuleModule;
        'sort-default-props': eslint0.Rule.RuleModule;
        'sort-prop-types': eslint0.Rule.RuleModule;
        'state-in-constructor': eslint0.Rule.RuleModule;
        'static-property-placement': eslint0.Rule.RuleModule;
        'style-prop-object': eslint0.Rule.RuleModule;
        'void-dom-elements-no-children': eslint0.Rule.RuleModule;
      }>;
      rules: {
        'boolean-prop-naming': eslint0.Rule.RuleModule;
        'button-has-type': eslint0.Rule.RuleModule;
        'checked-requires-onchange-or-readonly': eslint0.Rule.RuleModule;
        'default-props-match-prop-types': eslint0.Rule.RuleModule;
        'destructuring-assignment': eslint0.Rule.RuleModule;
        'display-name': eslint0.Rule.RuleModule;
        'forbid-component-props': eslint0.Rule.RuleModule;
        'forbid-dom-props': eslint0.Rule.RuleModule;
        'forbid-elements': eslint0.Rule.RuleModule;
        'forbid-foreign-prop-types': eslint0.Rule.RuleModule;
        'forbid-prop-types': eslint0.Rule.RuleModule;
        'forward-ref-uses-ref': eslint0.Rule.RuleModule;
        'function-component-definition': eslint0.Rule.RuleModule;
        'hook-use-state': eslint0.Rule.RuleModule;
        'iframe-missing-sandbox': eslint0.Rule.RuleModule;
        'jsx-boolean-value': eslint0.Rule.RuleModule;
        'jsx-child-element-spacing': eslint0.Rule.RuleModule;
        'jsx-closing-bracket-location': eslint0.Rule.RuleModule;
        'jsx-closing-tag-location': eslint0.Rule.RuleModule;
        'jsx-curly-spacing': eslint0.Rule.RuleModule;
        'jsx-curly-newline': eslint0.Rule.RuleModule;
        'jsx-equals-spacing': eslint0.Rule.RuleModule;
        'jsx-filename-extension': eslint0.Rule.RuleModule;
        'jsx-first-prop-new-line': eslint0.Rule.RuleModule;
        'jsx-handler-names': eslint0.Rule.RuleModule;
        'jsx-indent': eslint0.Rule.RuleModule;
        'jsx-indent-props': eslint0.Rule.RuleModule;
        'jsx-key': eslint0.Rule.RuleModule;
        'jsx-max-depth': eslint0.Rule.RuleModule;
        'jsx-max-props-per-line': eslint0.Rule.RuleModule;
        'jsx-newline': eslint0.Rule.RuleModule;
        'jsx-no-bind': eslint0.Rule.RuleModule;
        'jsx-no-comment-textnodes': eslint0.Rule.RuleModule;
        'jsx-no-constructed-context-values': eslint0.Rule.RuleModule;
        'jsx-no-duplicate-props': eslint0.Rule.RuleModule;
        'jsx-no-leaked-render': eslint0.Rule.RuleModule;
        'jsx-no-literals': eslint0.Rule.RuleModule;
        'jsx-no-script-url': eslint0.Rule.RuleModule;
        'jsx-no-target-blank': eslint0.Rule.RuleModule;
        'jsx-no-useless-fragment': eslint0.Rule.RuleModule;
        'jsx-one-expression-per-line': eslint0.Rule.RuleModule;
        'jsx-no-undef': eslint0.Rule.RuleModule;
        'jsx-curly-brace-presence': eslint0.Rule.RuleModule;
        'jsx-pascal-case': eslint0.Rule.RuleModule;
        'jsx-fragments': eslint0.Rule.RuleModule;
        'jsx-props-no-multi-spaces': eslint0.Rule.RuleModule;
        'jsx-props-no-spreading': eslint0.Rule.RuleModule;
        'jsx-props-no-spread-multi': eslint0.Rule.RuleModule;
        'jsx-sort-default-props': eslint0.Rule.RuleModule;
        'jsx-sort-props': eslint0.Rule.RuleModule;
        'jsx-space-before-closing': eslint0.Rule.RuleModule;
        'jsx-tag-spacing': eslint0.Rule.RuleModule;
        'jsx-uses-react': eslint0.Rule.RuleModule;
        'jsx-uses-vars': eslint0.Rule.RuleModule;
        'jsx-wrap-multilines': eslint0.Rule.RuleModule;
        'no-invalid-html-attribute': eslint0.Rule.RuleModule;
        'no-access-state-in-setstate': eslint0.Rule.RuleModule;
        'no-adjacent-inline-elements': eslint0.Rule.RuleModule;
        'no-array-index-key': eslint0.Rule.RuleModule;
        'no-arrow-function-lifecycle': eslint0.Rule.RuleModule;
        'no-children-prop': eslint0.Rule.RuleModule;
        'no-danger': eslint0.Rule.RuleModule;
        'no-danger-with-children': eslint0.Rule.RuleModule;
        'no-deprecated': eslint0.Rule.RuleModule;
        'no-did-mount-set-state': eslint0.Rule.RuleModule;
        'no-did-update-set-state': eslint0.Rule.RuleModule;
        'no-direct-mutation-state': eslint0.Rule.RuleModule;
        'no-find-dom-node': eslint0.Rule.RuleModule;
        'no-is-mounted': eslint0.Rule.RuleModule;
        'no-multi-comp': eslint0.Rule.RuleModule;
        'no-namespace': eslint0.Rule.RuleModule;
        'no-set-state': eslint0.Rule.RuleModule;
        'no-string-refs': eslint0.Rule.RuleModule;
        'no-redundant-should-component-update': eslint0.Rule.RuleModule;
        'no-render-return-value': eslint0.Rule.RuleModule;
        'no-this-in-sfc': eslint0.Rule.RuleModule;
        'no-typos': eslint0.Rule.RuleModule;
        'no-unescaped-entities': eslint0.Rule.RuleModule;
        'no-unknown-property': eslint0.Rule.RuleModule;
        'no-unsafe': eslint0.Rule.RuleModule;
        'no-unstable-nested-components': eslint0.Rule.RuleModule;
        'no-unused-class-component-methods': eslint0.Rule.RuleModule;
        'no-unused-prop-types': eslint0.Rule.RuleModule;
        'no-unused-state': eslint0.Rule.RuleModule;
        'no-object-type-as-default-prop': eslint0.Rule.RuleModule;
        'no-will-update-set-state': eslint0.Rule.RuleModule;
        'prefer-es6-class': eslint0.Rule.RuleModule;
        'prefer-exact-props': eslint0.Rule.RuleModule;
        'prefer-read-only-props': eslint0.Rule.RuleModule;
        'prefer-stateless-function': eslint0.Rule.RuleModule;
        'prop-types': eslint0.Rule.RuleModule;
        'react-in-jsx-scope': eslint0.Rule.RuleModule;
        'require-default-props': eslint0.Rule.RuleModule;
        'require-optimization': eslint0.Rule.RuleModule;
        'require-render-return': eslint0.Rule.RuleModule;
        'self-closing-comp': eslint0.Rule.RuleModule;
        'sort-comp': eslint0.Rule.RuleModule;
        'sort-default-props': eslint0.Rule.RuleModule;
        'sort-prop-types': eslint0.Rule.RuleModule;
        'state-in-constructor': eslint0.Rule.RuleModule;
        'static-property-placement': eslint0.Rule.RuleModule;
        'style-prop-object': eslint0.Rule.RuleModule;
        'void-dom-elements-no-children': eslint0.Rule.RuleModule;
      };
      configs: {
        recommended: {
          plugins: ["react"];
          parserOptions: {
            ecmaFeatures: {
              jsx: boolean;
            };
          };
          rules: {
            "react/display-name": 2;
            "react/jsx-key": 2;
            "react/jsx-no-comment-textnodes": 2;
            "react/jsx-no-duplicate-props": 2;
            "react/jsx-no-target-blank": 2;
            "react/jsx-no-undef": 2;
            "react/jsx-uses-react": 2;
            "react/jsx-uses-vars": 2;
            "react/no-children-prop": 2;
            "react/no-danger-with-children": 2;
            "react/no-deprecated": 2;
            "react/no-direct-mutation-state": 2;
            "react/no-find-dom-node": 2;
            "react/no-is-mounted": 2;
            "react/no-render-return-value": 2;
            "react/no-string-refs": 2;
            "react/no-unescaped-entities": 2;
            "react/no-unknown-property": 2;
            "react/no-unsafe": 0;
            "react/prop-types": 2;
            "react/react-in-jsx-scope": 2;
            "react/require-render-return": 2;
          };
        };
        all: {
          plugins: ["react"];
          parserOptions: {
            ecmaFeatures: {
              jsx: boolean;
            };
          };
          rules: Record<"boolean-prop-naming" | "button-has-type" | "checked-requires-onchange-or-readonly" | "default-props-match-prop-types" | "destructuring-assignment" | "display-name" | "forbid-component-props" | "forbid-dom-props" | "forbid-elements" | "forbid-foreign-prop-types" | "forbid-prop-types" | "prop-types" | "forward-ref-uses-ref" | "function-component-definition" | "hook-use-state" | "iframe-missing-sandbox" | "jsx-boolean-value" | "jsx-child-element-spacing" | "jsx-closing-bracket-location" | "jsx-closing-tag-location" | "jsx-curly-spacing" | "jsx-curly-newline" | "jsx-equals-spacing" | "jsx-filename-extension" | "jsx-first-prop-new-line" | "jsx-handler-names" | "jsx-indent" | "jsx-indent-props" | "jsx-key" | "jsx-max-depth" | "jsx-max-props-per-line" | "jsx-newline" | "jsx-no-bind" | "jsx-no-comment-textnodes" | "jsx-no-constructed-context-values" | "jsx-no-duplicate-props" | "jsx-no-leaked-render" | "jsx-no-literals" | "jsx-no-script-url" | "jsx-no-target-blank" | "jsx-no-useless-fragment" | "jsx-one-expression-per-line" | "jsx-no-undef" | "jsx-curly-brace-presence" | "jsx-pascal-case" | "jsx-fragments" | "jsx-props-no-multi-spaces" | "jsx-props-no-spreading" | "jsx-props-no-spread-multi" | "sort-default-props" | "jsx-sort-default-props" | "jsx-sort-props" | "jsx-tag-spacing" | "jsx-space-before-closing" | "jsx-uses-react" | "jsx-uses-vars" | "jsx-wrap-multilines" | "no-invalid-html-attribute" | "no-access-state-in-setstate" | "no-adjacent-inline-elements" | "no-array-index-key" | "no-arrow-function-lifecycle" | "no-children-prop" | "no-danger" | "no-danger-with-children" | "no-deprecated" | "no-direct-mutation-state" | "no-find-dom-node" | "no-is-mounted" | "no-multi-comp" | "no-namespace" | "no-set-state" | "no-string-refs" | "no-redundant-should-component-update" | "no-render-return-value" | "no-this-in-sfc" | "no-typos" | "no-unescaped-entities" | "no-unknown-property" | "no-unsafe" | "no-unstable-nested-components" | "no-unused-class-component-methods" | "no-unused-prop-types" | "no-unused-state" | "no-object-type-as-default-prop" | "prefer-es6-class" | "prefer-exact-props" | "prefer-read-only-props" | "prefer-stateless-function" | "react-in-jsx-scope" | "require-default-props" | "require-optimization" | "require-render-return" | "self-closing-comp" | "sort-comp" | "sort-prop-types" | "state-in-constructor" | "static-property-placement" | "style-prop-object" | "void-dom-elements-no-children" | "no-did-mount-set-state" | "no-did-update-set-state" | "no-will-update-set-state", 2 | "error">;
        };
        'jsx-runtime': {
          plugins: ["react"];
          parserOptions: {
            ecmaFeatures: {
              jsx: boolean;
            };
            jsxPragma: any;
          };
          rules: {
            "react/react-in-jsx-scope": 0;
            "react/jsx-uses-react": 0;
          };
        };
        flat: Record<string, react.ReactFlatConfig>;
      } & {
        flat: Record<string, react.ReactFlatConfig>;
      };
    };
    'jsx-a11y': Rule.RuleModule;
    'react-hooks': typeof reactHooks;
  };
  languageOptions: {
    parserOptions: {
      ecmaFeatures: {
        jsx: boolean;
      };
    };
    globals: {
      AbortController: false;
      AbortSignal: false;
      AbsoluteOrientationSensor: false;
      AbstractRange: false;
      Accelerometer: false;
      addEventListener: false;
      ai: false;
      AI: false;
      AITextSession: false;
      alert: false;
      AnalyserNode: false;
      Animation: false;
      AnimationEffect: false;
      AnimationEvent: false;
      AnimationPlaybackEvent: false;
      AnimationTimeline: false;
      atob: false;
      Attr: false;
      Audio: false;
      AudioBuffer: false;
      AudioBufferSourceNode: false;
      AudioContext: false;
      AudioData: false;
      AudioDecoder: false;
      AudioDestinationNode: false;
      AudioEncoder: false;
      AudioListener: false;
      AudioNode: false;
      AudioParam: false;
      AudioParamMap: false;
      AudioProcessingEvent: false;
      AudioScheduledSourceNode: false;
      AudioSinkInfo: false;
      AudioWorklet: false;
      AudioWorkletGlobalScope: false;
      AudioWorkletNode: false;
      AudioWorkletProcessor: false;
      AuthenticatorAssertionResponse: false;
      AuthenticatorAttestationResponse: false;
      AuthenticatorResponse: false;
      BackgroundFetchManager: false;
      BackgroundFetchRecord: false;
      BackgroundFetchRegistration: false;
      BarcodeDetector: false;
      BarProp: false;
      BaseAudioContext: false;
      BatteryManager: false;
      BeforeUnloadEvent: false;
      BiquadFilterNode: false;
      Blob: false;
      BlobEvent: false;
      Bluetooth: false;
      BluetoothCharacteristicProperties: false;
      BluetoothDevice: false;
      BluetoothRemoteGATTCharacteristic: false;
      BluetoothRemoteGATTDescriptor: false;
      BluetoothRemoteGATTServer: false;
      BluetoothRemoteGATTService: false;
      BluetoothUUID: false;
      blur: false;
      BroadcastChannel: false;
      BrowserCaptureMediaStreamTrack: false;
      btoa: false;
      ByteLengthQueuingStrategy: false;
      Cache: false;
      caches: false;
      CacheStorage: false;
      cancelAnimationFrame: false;
      cancelIdleCallback: false;
      CanvasCaptureMediaStream: false;
      CanvasCaptureMediaStreamTrack: false;
      CanvasGradient: false;
      CanvasPattern: false;
      CanvasRenderingContext2D: false;
      CaptureController: false;
      CaretPosition: false;
      CDATASection: false;
      ChannelMergerNode: false;
      ChannelSplitterNode: false;
      ChapterInformation: false;
      CharacterBoundsUpdateEvent: false;
      CharacterData: false;
      clearInterval: false;
      clearTimeout: false;
      clientInformation: false;
      Clipboard: false;
      ClipboardEvent: false;
      ClipboardItem: false;
      close: false;
      closed: false;
      CloseEvent: false;
      CloseWatcher: false;
      Comment: false;
      CompositionEvent: false;
      CompressionStream: false;
      confirm: false;
      console: false;
      ConstantSourceNode: false;
      ContentVisibilityAutoStateChangeEvent: false;
      ConvolverNode: false;
      CookieChangeEvent: false;
      CookieDeprecationLabel: false;
      cookieStore: false;
      CookieStore: false;
      CookieStoreManager: false;
      CountQueuingStrategy: false;
      createImageBitmap: false;
      Credential: false;
      credentialless: false;
      CredentialsContainer: false;
      CropTarget: false;
      crossOriginIsolated: false;
      crypto: false;
      Crypto: false;
      CryptoKey: false;
      CSS: false;
      CSSAnimation: false;
      CSSConditionRule: false;
      CSSContainerRule: false;
      CSSCounterStyleRule: false;
      CSSFontFaceRule: false;
      CSSFontFeatureValuesRule: false;
      CSSFontPaletteValuesRule: false;
      CSSGroupingRule: false;
      CSSImageValue: false;
      CSSImportRule: false;
      CSSKeyframeRule: false;
      CSSKeyframesRule: false;
      CSSKeywordValue: false;
      CSSLayerBlockRule: false;
      CSSLayerStatementRule: false;
      CSSMarginRule: false;
      CSSMathClamp: false;
      CSSMathInvert: false;
      CSSMathMax: false;
      CSSMathMin: false;
      CSSMathNegate: false;
      CSSMathProduct: false;
      CSSMathSum: false;
      CSSMathValue: false;
      CSSMatrixComponent: false;
      CSSMediaRule: false;
      CSSNamespaceRule: false;
      CSSNestedDeclarations: false;
      CSSNumericArray: false;
      CSSNumericValue: false;
      CSSPageDescriptors: false;
      CSSPageRule: false;
      CSSPerspective: false;
      CSSPositionTryDescriptors: false;
      CSSPositionTryRule: false;
      CSSPositionValue: false;
      CSSPropertyRule: false;
      CSSRotate: false;
      CSSRule: false;
      CSSRuleList: false;
      CSSScale: false;
      CSSScopeRule: false;
      CSSSkew: false;
      CSSSkewX: false;
      CSSSkewY: false;
      CSSStartingStyleRule: false;
      CSSStyleDeclaration: false;
      CSSStyleRule: false;
      CSSStyleSheet: false;
      CSSStyleValue: false;
      CSSSupportsRule: false;
      CSSTransformComponent: false;
      CSSTransformValue: false;
      CSSTransition: false;
      CSSTranslate: false;
      CSSUnitValue: false;
      CSSUnparsedValue: false;
      CSSVariableReferenceValue: false;
      CSSViewTransitionRule: false;
      currentFrame: false;
      currentTime: false;
      CustomElementRegistry: false;
      customElements: false;
      CustomEvent: false;
      CustomStateSet: false;
      DataTransfer: false;
      DataTransferItem: false;
      DataTransferItemList: false;
      DecompressionStream: false;
      DelayNode: false;
      DelegatedInkTrailPresenter: false;
      DeviceMotionEvent: false;
      DeviceMotionEventAcceleration: false;
      DeviceMotionEventRotationRate: false;
      DeviceOrientationEvent: false;
      devicePixelRatio: false;
      dispatchEvent: false;
      document: false;
      Document: false;
      DocumentFragment: false;
      documentPictureInPicture: false;
      DocumentPictureInPicture: false;
      DocumentPictureInPictureEvent: false;
      DocumentTimeline: false;
      DocumentType: false;
      DOMError: false;
      DOMException: false;
      DOMImplementation: false;
      DOMMatrix: false;
      DOMMatrixReadOnly: false;
      DOMParser: false;
      DOMPoint: false;
      DOMPointReadOnly: false;
      DOMQuad: false;
      DOMRect: false;
      DOMRectList: false;
      DOMRectReadOnly: false;
      DOMStringList: false;
      DOMStringMap: false;
      DOMTokenList: false;
      DragEvent: false;
      DynamicsCompressorNode: false;
      EditContext: false;
      Element: false;
      ElementInternals: false;
      EncodedAudioChunk: false;
      EncodedVideoChunk: false;
      ErrorEvent: false;
      event: false;
      Event: false;
      EventCounts: false;
      EventSource: false;
      EventTarget: false;
      external: false;
      External: false;
      EyeDropper: false;
      FeaturePolicy: false;
      FederatedCredential: false;
      fence: false;
      Fence: false;
      FencedFrameConfig: false;
      fetch: false;
      fetchLater: false;
      FetchLaterResult: false;
      File: false;
      FileList: false;
      FileReader: false;
      FileSystem: false;
      FileSystemDirectoryEntry: false;
      FileSystemDirectoryHandle: false;
      FileSystemDirectoryReader: false;
      FileSystemEntry: false;
      FileSystemFileEntry: false;
      FileSystemFileHandle: false;
      FileSystemHandle: false;
      FileSystemWritableFileStream: false;
      find: false;
      Float16Array: false;
      focus: false;
      FocusEvent: false;
      FontData: false;
      FontFace: false;
      FontFaceSet: false;
      FontFaceSetLoadEvent: false;
      FormData: false;
      FormDataEvent: false;
      FragmentDirective: false;
      frameElement: false;
      frames: false;
      GainNode: false;
      Gamepad: false;
      GamepadAxisMoveEvent: false;
      GamepadButton: false;
      GamepadButtonEvent: false;
      GamepadEvent: false;
      GamepadHapticActuator: false;
      GamepadPose: false;
      Geolocation: false;
      GeolocationCoordinates: false;
      GeolocationPosition: false;
      GeolocationPositionError: false;
      getComputedStyle: false;
      getScreenDetails: false;
      getSelection: false;
      GPU: false;
      GPUAdapter: false;
      GPUAdapterInfo: false;
      GPUBindGroup: false;
      GPUBindGroupLayout: false;
      GPUBuffer: false;
      GPUBufferUsage: false;
      GPUCanvasContext: false;
      GPUColorWrite: false;
      GPUCommandBuffer: false;
      GPUCommandEncoder: false;
      GPUCompilationInfo: false;
      GPUCompilationMessage: false;
      GPUComputePassEncoder: false;
      GPUComputePipeline: false;
      GPUDevice: false;
      GPUDeviceLostInfo: false;
      GPUError: false;
      GPUExternalTexture: false;
      GPUInternalError: false;
      GPUMapMode: false;
      GPUOutOfMemoryError: false;
      GPUPipelineError: false;
      GPUPipelineLayout: false;
      GPUQuerySet: false;
      GPUQueue: false;
      GPURenderBundle: false;
      GPURenderBundleEncoder: false;
      GPURenderPassEncoder: false;
      GPURenderPipeline: false;
      GPUSampler: false;
      GPUShaderModule: false;
      GPUShaderStage: false;
      GPUSupportedFeatures: false;
      GPUSupportedLimits: false;
      GPUTexture: false;
      GPUTextureUsage: false;
      GPUTextureView: false;
      GPUUncapturedErrorEvent: false;
      GPUValidationError: false;
      GravitySensor: false;
      Gyroscope: false;
      HashChangeEvent: false;
      Headers: false;
      HID: false;
      HIDConnectionEvent: false;
      HIDDevice: false;
      HIDInputReportEvent: false;
      Highlight: false;
      HighlightRegistry: false;
      history: false;
      History: false;
      HTMLAllCollection: false;
      HTMLAnchorElement: false;
      HTMLAreaElement: false;
      HTMLAudioElement: false;
      HTMLBaseElement: false;
      HTMLBodyElement: false;
      HTMLBRElement: false;
      HTMLButtonElement: false;
      HTMLCanvasElement: false;
      HTMLCollection: false;
      HTMLDataElement: false;
      HTMLDataListElement: false;
      HTMLDetailsElement: false;
      HTMLDialogElement: false;
      HTMLDirectoryElement: false;
      HTMLDivElement: false;
      HTMLDListElement: false;
      HTMLDocument: false;
      HTMLElement: false;
      HTMLEmbedElement: false;
      HTMLFencedFrameElement: false;
      HTMLFieldSetElement: false;
      HTMLFontElement: false;
      HTMLFormControlsCollection: false;
      HTMLFormElement: false;
      HTMLFrameElement: false;
      HTMLFrameSetElement: false;
      HTMLHeadElement: false;
      HTMLHeadingElement: false;
      HTMLHRElement: false;
      HTMLHtmlElement: false;
      HTMLIFrameElement: false;
      HTMLImageElement: false;
      HTMLInputElement: false;
      HTMLLabelElement: false;
      HTMLLegendElement: false;
      HTMLLIElement: false;
      HTMLLinkElement: false;
      HTMLMapElement: false;
      HTMLMarqueeElement: false;
      HTMLMediaElement: false;
      HTMLMenuElement: false;
      HTMLMetaElement: false;
      HTMLMeterElement: false;
      HTMLModElement: false;
      HTMLObjectElement: false;
      HTMLOListElement: false;
      HTMLOptGroupElement: false;
      HTMLOptionElement: false;
      HTMLOptionsCollection: false;
      HTMLOutputElement: false;
      HTMLParagraphElement: false;
      HTMLParamElement: false;
      HTMLPictureElement: false;
      HTMLPreElement: false;
      HTMLProgressElement: false;
      HTMLQuoteElement: false;
      HTMLScriptElement: false;
      HTMLSelectElement: false;
      HTMLSlotElement: false;
      HTMLSourceElement: false;
      HTMLSpanElement: false;
      HTMLStyleElement: false;
      HTMLTableCaptionElement: false;
      HTMLTableCellElement: false;
      HTMLTableColElement: false;
      HTMLTableElement: false;
      HTMLTableRowElement: false;
      HTMLTableSectionElement: false;
      HTMLTemplateElement: false;
      HTMLTextAreaElement: false;
      HTMLTimeElement: false;
      HTMLTitleElement: false;
      HTMLTrackElement: false;
      HTMLUListElement: false;
      HTMLUnknownElement: false;
      HTMLVideoElement: false;
      IDBCursor: false;
      IDBCursorWithValue: false;
      IDBDatabase: false;
      IDBFactory: false;
      IDBIndex: false;
      IDBKeyRange: false;
      IDBObjectStore: false;
      IDBOpenDBRequest: false;
      IDBRequest: false;
      IDBTransaction: false;
      IDBVersionChangeEvent: false;
      IdentityCredential: false;
      IdentityCredentialError: false;
      IdentityProvider: false;
      IdleDeadline: false;
      IdleDetector: false;
      IIRFilterNode: false;
      Image: false;
      ImageBitmap: false;
      ImageBitmapRenderingContext: false;
      ImageCapture: false;
      ImageData: false;
      ImageDecoder: false;
      ImageTrack: false;
      ImageTrackList: false;
      indexedDB: false;
      Ink: false;
      innerHeight: false;
      innerWidth: false;
      InputDeviceCapabilities: false;
      InputDeviceInfo: false;
      InputEvent: false;
      IntersectionObserver: false;
      IntersectionObserverEntry: false;
      isSecureContext: false;
      Keyboard: false;
      KeyboardEvent: false;
      KeyboardLayoutMap: false;
      KeyframeEffect: false;
      LargestContentfulPaint: false;
      LaunchParams: false;
      launchQueue: false;
      LaunchQueue: false;
      LayoutShift: false;
      LayoutShiftAttribution: false;
      length: false;
      LinearAccelerationSensor: false;
      localStorage: false;
      location: true;
      Location: false;
      locationbar: false;
      Lock: false;
      LockManager: false;
      matchMedia: false;
      MathMLElement: false;
      MediaCapabilities: false;
      MediaCapabilitiesInfo: false;
      MediaDeviceInfo: false;
      MediaDevices: false;
      MediaElementAudioSourceNode: false;
      MediaEncryptedEvent: false;
      MediaError: false;
      MediaKeyError: false;
      MediaKeyMessageEvent: false;
      MediaKeys: false;
      MediaKeySession: false;
      MediaKeyStatusMap: false;
      MediaKeySystemAccess: false;
      MediaList: false;
      MediaMetadata: false;
      MediaQueryList: false;
      MediaQueryListEvent: false;
      MediaRecorder: false;
      MediaRecorderErrorEvent: false;
      MediaSession: false;
      MediaSource: false;
      MediaSourceHandle: false;
      MediaStream: false;
      MediaStreamAudioDestinationNode: false;
      MediaStreamAudioSourceNode: false;
      MediaStreamEvent: false;
      MediaStreamTrack: false;
      MediaStreamTrackAudioSourceNode: false;
      MediaStreamTrackAudioStats: false;
      MediaStreamTrackEvent: false;
      MediaStreamTrackGenerator: false;
      MediaStreamTrackProcessor: false;
      MediaStreamTrackVideoStats: false;
      menubar: false;
      MessageChannel: false;
      MessageEvent: false;
      MessagePort: false;
      MIDIAccess: false;
      MIDIConnectionEvent: false;
      MIDIInput: false;
      MIDIInputMap: false;
      MIDIMessageEvent: false;
      MIDIOutput: false;
      MIDIOutputMap: false;
      MIDIPort: false;
      MimeType: false;
      MimeTypeArray: false;
      model: false;
      ModelGenericSession: false;
      ModelManager: false;
      MouseEvent: false;
      moveBy: false;
      moveTo: false;
      MutationEvent: false;
      MutationObserver: false;
      MutationRecord: false;
      name: false;
      NamedNodeMap: false;
      NavigateEvent: false;
      navigation: false;
      Navigation: false;
      NavigationActivation: false;
      NavigationCurrentEntryChangeEvent: false;
      NavigationDestination: false;
      NavigationHistoryEntry: false;
      NavigationPreloadManager: false;
      NavigationTransition: false;
      navigator: false;
      Navigator: false;
      NavigatorLogin: false;
      NavigatorManagedData: false;
      NavigatorUAData: false;
      NetworkInformation: false;
      Node: false;
      NodeFilter: false;
      NodeIterator: false;
      NodeList: false;
      Notification: false;
      NotifyPaintEvent: false;
      NotRestoredReasonDetails: false;
      NotRestoredReasons: false;
      OfflineAudioCompletionEvent: false;
      OfflineAudioContext: false;
      offscreenBuffering: false;
      OffscreenCanvas: false;
      OffscreenCanvasRenderingContext2D: false;
      onabort: true;
      onafterprint: true;
      onanimationcancel: true;
      onanimationend: true;
      onanimationiteration: true;
      onanimationstart: true;
      onappinstalled: true;
      onauxclick: true;
      onbeforeinput: true;
      onbeforeinstallprompt: true;
      onbeforematch: true;
      onbeforeprint: true;
      onbeforetoggle: true;
      onbeforeunload: true;
      onbeforexrselect: true;
      onblur: true;
      oncancel: true;
      oncanplay: true;
      oncanplaythrough: true;
      onchange: true;
      onclick: true;
      onclose: true;
      oncontentvisibilityautostatechange: true;
      oncontextlost: true;
      oncontextmenu: true;
      oncontextrestored: true;
      oncopy: true;
      oncuechange: true;
      oncut: true;
      ondblclick: true;
      ondevicemotion: true;
      ondeviceorientation: true;
      ondeviceorientationabsolute: true;
      ondrag: true;
      ondragend: true;
      ondragenter: true;
      ondragleave: true;
      ondragover: true;
      ondragstart: true;
      ondrop: true;
      ondurationchange: true;
      onemptied: true;
      onended: true;
      onerror: true;
      onfocus: true;
      onformdata: true;
      ongamepadconnected: true;
      ongamepaddisconnected: true;
      ongotpointercapture: true;
      onhashchange: true;
      oninput: true;
      oninvalid: true;
      onkeydown: true;
      onkeypress: true;
      onkeyup: true;
      onlanguagechange: true;
      onload: true;
      onloadeddata: true;
      onloadedmetadata: true;
      onloadstart: true;
      onlostpointercapture: true;
      onmessage: true;
      onmessageerror: true;
      onmousedown: true;
      onmouseenter: true;
      onmouseleave: true;
      onmousemove: true;
      onmouseout: true;
      onmouseover: true;
      onmouseup: true;
      onmousewheel: true;
      onoffline: true;
      ononline: true;
      onpagehide: true;
      onpagereveal: true;
      onpageshow: true;
      onpageswap: true;
      onpaste: true;
      onpause: true;
      onplay: true;
      onplaying: true;
      onpointercancel: true;
      onpointerdown: true;
      onpointerenter: true;
      onpointerleave: true;
      onpointermove: true;
      onpointerout: true;
      onpointerover: true;
      onpointerrawupdate: true;
      onpointerup: true;
      onpopstate: true;
      onprogress: true;
      onratechange: true;
      onrejectionhandled: true;
      onreset: true;
      onresize: true;
      onscroll: true;
      onscrollend: true;
      onscrollsnapchange: true;
      onscrollsnapchanging: true;
      onsearch: true;
      onsecuritypolicyviolation: true;
      onseeked: true;
      onseeking: true;
      onselect: true;
      onselectionchange: true;
      onselectstart: true;
      onslotchange: true;
      onstalled: true;
      onstorage: true;
      onsubmit: true;
      onsuspend: true;
      ontimeupdate: true;
      ontoggle: true;
      ontransitioncancel: true;
      ontransitionend: true;
      ontransitionrun: true;
      ontransitionstart: true;
      onunhandledrejection: true;
      onunload: true;
      onvolumechange: true;
      onwaiting: true;
      onwheel: true;
      open: false;
      opener: false;
      Option: false;
      OrientationSensor: false;
      origin: false;
      originAgentCluster: false;
      OscillatorNode: false;
      OTPCredential: false;
      outerHeight: false;
      outerWidth: false;
      OverconstrainedError: false;
      PageRevealEvent: false;
      PageSwapEvent: false;
      PageTransitionEvent: false;
      pageXOffset: false;
      pageYOffset: false;
      PannerNode: false;
      parent: false;
      PasswordCredential: false;
      Path2D: false;
      PaymentAddress: false;
      PaymentManager: false;
      PaymentMethodChangeEvent: false;
      PaymentRequest: false;
      PaymentRequestUpdateEvent: false;
      PaymentResponse: false;
      performance: false;
      Performance: false;
      PerformanceElementTiming: false;
      PerformanceEntry: false;
      PerformanceEventTiming: false;
      PerformanceLongAnimationFrameTiming: false;
      PerformanceLongTaskTiming: false;
      PerformanceMark: false;
      PerformanceMeasure: false;
      PerformanceNavigation: false;
      PerformanceNavigationTiming: false;
      PerformanceObserver: false;
      PerformanceObserverEntryList: false;
      PerformancePaintTiming: false;
      PerformanceResourceTiming: false;
      PerformanceScriptTiming: false;
      PerformanceServerTiming: false;
      PerformanceTiming: false;
      PeriodicSyncManager: false;
      PeriodicWave: false;
      Permissions: false;
      PermissionStatus: false;
      PERSISTENT: false;
      personalbar: false;
      PictureInPictureEvent: false;
      PictureInPictureWindow: false;
      Plugin: false;
      PluginArray: false;
      PointerEvent: false;
      PopStateEvent: false;
      postMessage: false;
      Presentation: false;
      PresentationAvailability: false;
      PresentationConnection: false;
      PresentationConnectionAvailableEvent: false;
      PresentationConnectionCloseEvent: false;
      PresentationConnectionList: false;
      PresentationReceiver: false;
      PresentationRequest: false;
      PressureObserver: false;
      PressureRecord: false;
      print: false;
      ProcessingInstruction: false;
      Profiler: false;
      ProgressEvent: false;
      PromiseRejectionEvent: false;
      prompt: false;
      ProtectedAudience: false;
      PublicKeyCredential: false;
      PushManager: false;
      PushSubscription: false;
      PushSubscriptionOptions: false;
      queryLocalFonts: false;
      queueMicrotask: false;
      RadioNodeList: false;
      Range: false;
      ReadableByteStreamController: false;
      ReadableStream: false;
      ReadableStreamBYOBReader: false;
      ReadableStreamBYOBRequest: false;
      ReadableStreamDefaultController: false;
      ReadableStreamDefaultReader: false;
      registerProcessor: false;
      RelativeOrientationSensor: false;
      RemotePlayback: false;
      removeEventListener: false;
      reportError: false;
      ReportingObserver: false;
      Request: false;
      requestAnimationFrame: false;
      requestIdleCallback: false;
      resizeBy: false;
      ResizeObserver: false;
      ResizeObserverEntry: false;
      ResizeObserverSize: false;
      resizeTo: false;
      Response: false;
      RTCCertificate: false;
      RTCDataChannel: false;
      RTCDataChannelEvent: false;
      RTCDtlsTransport: false;
      RTCDTMFSender: false;
      RTCDTMFToneChangeEvent: false;
      RTCEncodedAudioFrame: false;
      RTCEncodedVideoFrame: false;
      RTCError: false;
      RTCErrorEvent: false;
      RTCIceCandidate: false;
      RTCIceTransport: false;
      RTCPeerConnection: false;
      RTCPeerConnectionIceErrorEvent: false;
      RTCPeerConnectionIceEvent: false;
      RTCRtpReceiver: false;
      RTCRtpScriptTransform: false;
      RTCRtpSender: false;
      RTCRtpTransceiver: false;
      RTCSctpTransport: false;
      RTCSessionDescription: false;
      RTCStatsReport: false;
      RTCTrackEvent: false;
      sampleRate: false;
      scheduler: false;
      Scheduler: false;
      Scheduling: false;
      screen: false;
      Screen: false;
      ScreenDetailed: false;
      ScreenDetails: false;
      screenLeft: false;
      ScreenOrientation: false;
      screenTop: false;
      screenX: false;
      screenY: false;
      ScriptProcessorNode: false;
      scroll: false;
      scrollbars: false;
      scrollBy: false;
      ScrollTimeline: false;
      scrollTo: false;
      scrollX: false;
      scrollY: false;
      SecurityPolicyViolationEvent: false;
      Selection: false;
      self: false;
      Sensor: false;
      SensorErrorEvent: false;
      Serial: false;
      SerialPort: false;
      ServiceWorker: false;
      ServiceWorkerContainer: false;
      ServiceWorkerRegistration: false;
      sessionStorage: false;
      setInterval: false;
      setTimeout: false;
      ShadowRoot: false;
      sharedStorage: false;
      SharedStorage: false;
      SharedStorageWorklet: false;
      SharedWorker: false;
      showDirectoryPicker: false;
      showOpenFilePicker: false;
      showSaveFilePicker: false;
      SnapEvent: false;
      SourceBuffer: false;
      SourceBufferList: false;
      speechSynthesis: false;
      SpeechSynthesis: false;
      SpeechSynthesisErrorEvent: false;
      SpeechSynthesisEvent: false;
      SpeechSynthesisUtterance: false;
      SpeechSynthesisVoice: false;
      StaticRange: false;
      status: false;
      statusbar: false;
      StereoPannerNode: false;
      stop: false;
      Storage: false;
      StorageBucket: false;
      StorageBucketManager: false;
      StorageEvent: false;
      StorageManager: false;
      structuredClone: false;
      styleMedia: false;
      StylePropertyMap: false;
      StylePropertyMapReadOnly: false;
      StyleSheet: false;
      StyleSheetList: false;
      SubmitEvent: false;
      SubtleCrypto: false;
      SVGAElement: false;
      SVGAngle: false;
      SVGAnimatedAngle: false;
      SVGAnimatedBoolean: false;
      SVGAnimatedEnumeration: false;
      SVGAnimatedInteger: false;
      SVGAnimatedLength: false;
      SVGAnimatedLengthList: false;
      SVGAnimatedNumber: false;
      SVGAnimatedNumberList: false;
      SVGAnimatedPreserveAspectRatio: false;
      SVGAnimatedRect: false;
      SVGAnimatedString: false;
      SVGAnimatedTransformList: false;
      SVGAnimateElement: false;
      SVGAnimateMotionElement: false;
      SVGAnimateTransformElement: false;
      SVGAnimationElement: false;
      SVGCircleElement: false;
      SVGClipPathElement: false;
      SVGComponentTransferFunctionElement: false;
      SVGDefsElement: false;
      SVGDescElement: false;
      SVGElement: false;
      SVGEllipseElement: false;
      SVGFEBlendElement: false;
      SVGFEColorMatrixElement: false;
      SVGFEComponentTransferElement: false;
      SVGFECompositeElement: false;
      SVGFEConvolveMatrixElement: false;
      SVGFEDiffuseLightingElement: false;
      SVGFEDisplacementMapElement: false;
      SVGFEDistantLightElement: false;
      SVGFEDropShadowElement: false;
      SVGFEFloodElement: false;
      SVGFEFuncAElement: false;
      SVGFEFuncBElement: false;
      SVGFEFuncGElement: false;
      SVGFEFuncRElement: false;
      SVGFEGaussianBlurElement: false;
      SVGFEImageElement: false;
      SVGFEMergeElement: false;
      SVGFEMergeNodeElement: false;
      SVGFEMorphologyElement: false;
      SVGFEOffsetElement: false;
      SVGFEPointLightElement: false;
      SVGFESpecularLightingElement: false;
      SVGFESpotLightElement: false;
      SVGFETileElement: false;
      SVGFETurbulenceElement: false;
      SVGFilterElement: false;
      SVGForeignObjectElement: false;
      SVGGElement: false;
      SVGGeometryElement: false;
      SVGGradientElement: false;
      SVGGraphicsElement: false;
      SVGImageElement: false;
      SVGLength: false;
      SVGLengthList: false;
      SVGLinearGradientElement: false;
      SVGLineElement: false;
      SVGMarkerElement: false;
      SVGMaskElement: false;
      SVGMatrix: false;
      SVGMetadataElement: false;
      SVGMPathElement: false;
      SVGNumber: false;
      SVGNumberList: false;
      SVGPathElement: false;
      SVGPatternElement: false;
      SVGPoint: false;
      SVGPointList: false;
      SVGPolygonElement: false;
      SVGPolylineElement: false;
      SVGPreserveAspectRatio: false;
      SVGRadialGradientElement: false;
      SVGRect: false;
      SVGRectElement: false;
      SVGScriptElement: false;
      SVGSetElement: false;
      SVGStopElement: false;
      SVGStringList: false;
      SVGStyleElement: false;
      SVGSVGElement: false;
      SVGSwitchElement: false;
      SVGSymbolElement: false;
      SVGTextContentElement: false;
      SVGTextElement: false;
      SVGTextPathElement: false;
      SVGTextPositioningElement: false;
      SVGTitleElement: false;
      SVGTransform: false;
      SVGTransformList: false;
      SVGTSpanElement: false;
      SVGUnitTypes: false;
      SVGUseElement: false;
      SVGViewElement: false;
      SyncManager: false;
      TaskAttributionTiming: false;
      TaskController: false;
      TaskPriorityChangeEvent: false;
      TaskSignal: false;
      TEMPORARY: false;
      Text: false;
      TextDecoder: false;
      TextDecoderStream: false;
      TextEncoder: false;
      TextEncoderStream: false;
      TextEvent: false;
      TextFormat: false;
      TextFormatUpdateEvent: false;
      TextMetrics: false;
      TextTrack: false;
      TextTrackCue: false;
      TextTrackCueList: false;
      TextTrackList: false;
      TextUpdateEvent: false;
      TimeEvent: false;
      TimeRanges: false;
      ToggleEvent: false;
      toolbar: false;
      top: false;
      Touch: false;
      TouchEvent: false;
      TouchList: false;
      TrackEvent: false;
      TransformStream: false;
      TransformStreamDefaultController: false;
      TransitionEvent: false;
      TreeWalker: false;
      TrustedHTML: false;
      TrustedScript: false;
      TrustedScriptURL: false;
      TrustedTypePolicy: false;
      TrustedTypePolicyFactory: false;
      trustedTypes: false;
      UIEvent: false;
      URL: false;
      URLPattern: false;
      URLSearchParams: false;
      USB: false;
      USBAlternateInterface: false;
      USBConfiguration: false;
      USBConnectionEvent: false;
      USBDevice: false;
      USBEndpoint: false;
      USBInterface: false;
      USBInTransferResult: false;
      USBIsochronousInTransferPacket: false;
      USBIsochronousInTransferResult: false;
      USBIsochronousOutTransferPacket: false;
      USBIsochronousOutTransferResult: false;
      USBOutTransferResult: false;
      UserActivation: false;
      ValidityState: false;
      VideoColorSpace: false;
      VideoDecoder: false;
      VideoEncoder: false;
      VideoFrame: false;
      VideoPlaybackQuality: false;
      ViewTimeline: false;
      ViewTransition: false;
      ViewTransitionTypeSet: false;
      VirtualKeyboard: false;
      VirtualKeyboardGeometryChangeEvent: false;
      VisibilityStateEntry: false;
      visualViewport: false;
      VisualViewport: false;
      VTTCue: false;
      VTTRegion: false;
      WakeLock: false;
      WakeLockSentinel: false;
      WaveShaperNode: false;
      WebAssembly: false;
      WebGL2RenderingContext: false;
      WebGLActiveInfo: false;
      WebGLBuffer: false;
      WebGLContextEvent: false;
      WebGLFramebuffer: false;
      WebGLObject: false;
      WebGLProgram: false;
      WebGLQuery: false;
      WebGLRenderbuffer: false;
      WebGLRenderingContext: false;
      WebGLSampler: false;
      WebGLShader: false;
      WebGLShaderPrecisionFormat: false;
      WebGLSync: false;
      WebGLTexture: false;
      WebGLTransformFeedback: false;
      WebGLUniformLocation: false;
      WebGLVertexArrayObject: false;
      WebSocket: false;
      WebSocketError: false;
      WebSocketStream: false;
      WebTransport: false;
      WebTransportBidirectionalStream: false;
      WebTransportDatagramDuplexStream: false;
      WebTransportError: false;
      WebTransportReceiveStream: false;
      WebTransportSendStream: false;
      WGSLLanguageFeatures: false;
      WheelEvent: false;
      window: false;
      Window: false;
      WindowControlsOverlay: false;
      WindowControlsOverlayGeometryChangeEvent: false;
      Worker: false;
      Worklet: false;
      WorkletGlobalScope: false;
      WritableStream: false;
      WritableStreamDefaultController: false;
      WritableStreamDefaultWriter: false;
      XMLDocument: false;
      XMLHttpRequest: false;
      XMLHttpRequestEventTarget: false;
      XMLHttpRequestUpload: false;
      XMLSerializer: false;
      XPathEvaluator: false;
      XPathExpression: false;
      XPathResult: false;
      XRAnchor: false;
      XRAnchorSet: false;
      XRBoundedReferenceSpace: false;
      XRCamera: false;
      XRCPUDepthInformation: false;
      XRDepthInformation: false;
      XRDOMOverlayState: false;
      XRFrame: false;
      XRHand: false;
      XRHitTestResult: false;
      XRHitTestSource: false;
      XRInputSource: false;
      XRInputSourceArray: false;
      XRInputSourceEvent: false;
      XRInputSourcesChangeEvent: false;
      XRJointPose: false;
      XRJointSpace: false;
      XRLayer: false;
      XRLightEstimate: false;
      XRLightProbe: false;
      XRPose: false;
      XRRay: false;
      XRReferenceSpace: false;
      XRReferenceSpaceEvent: false;
      XRRenderState: false;
      XRRigidTransform: false;
      XRSession: false;
      XRSessionEvent: false;
      XRSpace: false;
      XRSystem: false;
      XRTransientInputHitTestResult: false;
      XRTransientInputHitTestSource: false;
      XRView: false;
      XRViewerPose: false;
      XRViewport: false;
      XRWebGLBinding: false;
      XRWebGLDepthInformation: false;
      XRWebGLLayer: false;
      XSLTProcessor: false;
    };
  };
  settings: {
    react: {
      version: string;
    };
  };
  files: string[];
  rules: {
    'react-hooks/rules-of-hooks': "error";
    'react-hooks/exhaustive-deps': "warn";
    "react/boolean-prop-naming": string;
    "react/button-has-type": string;
    "react/default-props-match-prop-types": (string | {
      allowRequiredDefaults: boolean;
    })[];
    "react/destructuring-assignment": string[];
    "react/display-name": (string | {
      ignoreTranspilerName: boolean;
    })[];
    "react/forbid-component-props": string;
    "react/forbid-dom-props": (string | {
      forbid: string[];
    })[];
    "react/forbid-elements": string;
    "react/forbid-foreign-prop-types": (string | {
      allowInPropTypes: boolean;
    })[];
    "react/forbid-prop-types": string;
    'react/function-component-definition': (string | {
      namedComponents: string;
      unnamedComponents: string;
    })[];
    "react/hook-use-state": string;
    "react/iframe-missing-sandbox": string;
    "react/jsx-boolean-value": string[];
    "react/jsx-child-element-spacing": string;
    "react/jsx-closing-bracket-location": string;
    "react/jsx-closing-tag-location": string;
    "react/jsx-curly-brace-presence": (string | {
      props: string;
      children: string;
      propElementValues: string;
    })[];
    "react/jsx-curly-newline": (string | {
      multiline: string;
      singleline: string;
    })[];
    "react/jsx-curly-spacing": (string | {
      when: string;
      children: boolean;
      allowMultiline: boolean;
      attributes: {
        allowMultiline: boolean;
      };
      spacing: {
        objectLiterals: string;
      };
    })[];
    "react/jsx-equals-spacing": string[];
    "react/jsx-filename-extension": (string | {
      extensions: string[];
    })[];
    "react/jsx-first-prop-new-line": string[];
    "react/jsx-fragments": string[];
    "react/jsx-handler-names": (string | {
      eventHandlerPrefix: string;
      eventHandlerPropPrefix: string;
      checkLocalVariables: boolean;
      checkInlineFunction: boolean;
    })[];
    "react/jsx-indent": (string | number | {
      checkAttributes: boolean;
      indentLogicalExpressions: boolean;
    })[];
    "react/jsx-indent-props": (string | number)[];
    "react/jsx-key": (string | {
      checkFragmentShorthand: boolean;
      checkKeyMustBeforeSpread: boolean;
      warnOnDuplicates: boolean;
    })[];
    "react/jsx-max-depth": (string | {
      max: number;
    })[];
    "react/jsx-max-props-per-line": (string | {
      maximum: {
        single: number;
        multi: number;
      };
    })[];
    "react/jsx-newline": (string | {
      prevent: boolean;
      allowMultilines: boolean;
    })[];
    "react/jsx-no-bind": (string | {
      ignoreDOMComponents: boolean;
      ignoreRefs: boolean;
      allowArrowFunctions: boolean;
      allowFunctions: boolean;
      allowBind: boolean;
    })[];
    "react/jsx-no-comment-textnodes": string;
    "react/jsx-no-constructed-context-values": string;
    "react/jsx-no-duplicate-props": (string | {
      ignoreCase: boolean;
    })[];
    "react/jsx-no-leaked-render": (string | {
      validStrategies: string[];
    })[];
    "react/jsx-no-literals": (string | {
      noStrings: boolean;
      allowedStrings: string[];
      ignoreProps: boolean;
      noAttributeStrings: boolean;
    })[];
    "react/jsx-no-script-url": (string | {
      name: string;
      props: string[];
    }[])[];
    "react/jsx-no-target-blank": (string | {
      allowReferrer: boolean;
      enforceDynamicLinks: string;
      warnOnSpreadAttributes: boolean;
      links: boolean;
      forms: boolean;
    })[];
    "react/jsx-no-undef": (string | {
      allowGlobals: boolean;
    })[];
    "react/jsx-no-useless-fragment": (string | {
      allowExpressions: boolean;
    })[];
    "react/jsx-one-expression-per-line": (string | {
      allow: string;
    })[];
    "react/jsx-pascal-case": (string | {
      allowAllCaps: boolean;
      allowNamespace: boolean;
      allowLeadingUnderscore: boolean;
    })[];
    "react/jsx-props-no-multi-spaces": string;
    "react/jsx-props-no-spreading": (string | {
      html: string;
      custom: string;
      explicitSpread: string;
    })[];
    "react/jsx-sort-default-props": (string | {
      ignoreCase: boolean;
    })[];
    "react/jsx-space-before-closing": string[];
    "react/jsx-tag-spacing": (string | {
      closingSlash: string;
      beforeSelfClosing: string;
      afterOpening: string;
      beforeClosing: string;
    })[];
    "react/jsx-uses-react": string;
    "react/jsx-uses-vars": string;
    "react/jsx-wrap-multilines": (string | {
      declaration: string;
      assignment: string;
      return: string;
      arrow: string;
      condition: string;
      logical: string;
      prop: string;
    })[];
    "react/no-access-state-in-setstate": string;
    "react/no-adjacent-inline-elements": string;
    "react/no-array-index-key": string;
    "react/no-arrow-function-lifecycle": string;
    "react/no-children-prop": (string | {
      allowFunctions: boolean;
    })[];
    "react/no-danger": string;
    "react/no-danger-with-children": string;
    "react/no-deprecated": string;
    "react/no-did-mount-set-state": string[];
    "react/no-did-update-set-state": string[];
    "react/no-direct-mutation-state": string;
    "react/no-find-dom-node": string;
    "react/no-invalid-html-attribute": string;
    "react/no-is-mounted": string;
    "react/no-multi-comp": (string | {
      ignoreStateless: boolean;
    })[];
    "react/no-namespace": string;
    "react/no-object-type-as-default-prop": string;
    "react/no-redundant-should-component-update": string;
    "react/no-render-return-value": string;
    "react/no-set-state": string;
    "react/no-string-refs": (string | {
      noTemplateLiterals: boolean;
    })[];
    "react/no-this-in-sfc": string;
    "react/no-typos": string;
    "react/no-unescaped-entities": string;
    "react/no-unknown-property": (string | {
      ignore: string[];
    })[];
    "react/no-unsafe": (string | {
      checkAliases: boolean;
    })[];
    "react/no-unstable-nested-components": (string | {
      allowAsProps: boolean;
    })[];
    "react/no-unused-class-component-methods": string;
    "react/no-unused-prop-types": string;
    "react/no-unused-state": string;
    "react/no-will-update-set-state": string[];
    "react/prefer-es6-class": string[];
    "react/prefer-exact-props": string;
    "react/prefer-read-only-props": string;
    "react/prefer-stateless-function": (string | {
      ignorePureComponents: boolean;
    })[];
    "react/prop-types": string;
    "react/react-in-jsx-scope": string;
    "react/require-default-props": (string | {
      forbidDefaultForRequired: boolean;
      classes: string;
      functions: string;
    })[];
    "react/require-optimization": (string | {
      allowDecorators: string[];
    })[];
    "react/require-render-return": string;
    "react/self-closing-comp": (string | {
      component: boolean;
      html: boolean;
    })[];
    "react/sort-comp": string;
    "react/sort-default-props": (string | {
      ignoreCase: boolean;
    })[];
    "react/sort-prop-types": (string | {
      callbacksLast: boolean;
      ignoreCase: boolean;
      requiredFirst: boolean;
      sortShapeProp: boolean;
      noSortAlphabetically: boolean;
    })[];
    "react/state-in-constructor": string[];
    "react/static-property-placement": string;
    "react/style-prop-object": string;
    "react/void-dom-elements-no-children": string;
    "jsx-a11y/accessible-emoji": string;
    "jsx-a11y/alt-text": string;
    "jsx-a11y/anchor-ambiguous-text": (string | {
      words: string[];
    })[];
    'jsx-a11y/anchor-has-content': string[];
    'jsx-a11y/anchor-is-valid': string[];
    'jsx-a11y/aria-activedescendant-has-tabindex': string[];
    'jsx-a11y/aria-props': string[];
    'jsx-a11y/aria-proptypes': string[];
    'jsx-a11y/aria-role': string[];
    'jsx-a11y/aria-unsupported-elements': string[];
    'jsx-a11y/autocomplete-valid': string[];
    'jsx-a11y/click-events-have-key-events': string[];
    'jsx-a11y/control-has-associated-label': string[];
    'jsx-a11y/heading-has-content': string[];
    'jsx-a11y/html-has-lang': string[];
    'jsx-a11y/iframe-has-title': string[];
    'jsx-a11y/img-redundant-alt': string[];
    'jsx-a11y/interactive-supports-focus': string[];
    'jsx-a11y/label-has-associated-control': string[];
    'jsx-a11y/label-has-for': string[];
    'jsx-a11y/lang': string[];
    'jsx-a11y/media-has-caption': string[];
    'jsx-a11y/mouse-events-have-key-events': string[];
    'jsx-a11y/no-access-key': string[];
    'jsx-a11y/no-aria-hidden-on-focusable': string[];
    'jsx-a11y/no-autofocus': string[];
    'jsx-a11y/no-distracting-elements': string[];
    'jsx-a11y/no-interactive-element-to-noninteractive-role': string[];
    'jsx-a11y/no-noninteractive-element-interactions': string[];
    'jsx-a11y/no-noninteractive-element-to-interactive-role': string[];
    'jsx-a11y/no-noninteractive-tabindex': string[];
    'jsx-a11y/no-onchange': string[];
    'jsx-a11y/no-redundant-roles': string[];
    'jsx-a11y/no-static-element-interactions': string[];
    'jsx-a11y/prefer-tag-over-role': string[];
    'jsx-a11y/role-has-required-aria-props': string[];
    'jsx-a11y/role-supports-aria-props': string[];
    'jsx-a11y/scope': string[];
    'jsx-a11y/tabindex-no-positive': string[];
  };
} | {
  files: string[];
  rules: {
    "react/default-props-match-prop-types": string;
    "react/forbid-foreign-prop-types": string;
    "react/forbid-prop-types": string;
    "react/no-unused-prop-types": string;
    "react/prefer-exact-props": string;
  };
  plugins?: undefined;
  languageOptions?: undefined;
  settings?: undefined;
})[];
//#endregion
export { _default as default };